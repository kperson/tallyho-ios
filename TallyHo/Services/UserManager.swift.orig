//
//  UserManager.swift
//  TallyHo
//
//  Created by Kelton Person on 3/9/15.
//  Copyright (c) 2015 TallyHo. All rights reserved.
//

import Foundation

protocol UserManager {
<<<<<<< Updated upstream
    
    func login(#username: String, password: String) -> Future<String>
    
=======
    func login(username: String, password: String, url: String) -> Future<LoginToken>
>>>>>>> Stashed changes
}

class RestUserManager : UserManager {
    
<<<<<<< Updated upstream
    func login(#username: String, password: String) -> Future<String> {
        let headers = HeaderBuilder().acceptJSON().sendJSON().build()
        let loginUrl = Service.endpointUrl("/auth")
        let loginRequest = [ "username" : username, "password" : password ]
        let requestBody = ServiceUtil.asJson(loginRequest)!
        return ServiceUtil.post(loginUrl, body: requestBody, headers: headers)
        .map(Service.checkForServiceErrors)
        .map { res in
            let decoder = res.body.dictDecoderFromJSON.value!
            return Try.Success(LoginToken(decoder: decoder).token)
=======
    func Login(username: String, password: String, url: String) -> Future<LoginToken> {
        let headers = HeaderBuilder().acceptJSON().addAuth().build()
        let projectUrl = Service.endpointUrl("/auth")
        var params: Dictionary<String, AnyObject> = ["username" : username, "password" : password]
        return ServiceUtil.post(projectUrl, body: Services.asJson(params)!, headers: headers).map(Service.checkForServiceErrors)
            .map { res in
                let decoder = res.body.arrDecoderFromJSON.value!
                let projects = DecoderDictionary<LoginToken>(decoder: decoder).items
                return Try.Success(projects)
>>>>>>> Stashed changes
        }
    }
    
}